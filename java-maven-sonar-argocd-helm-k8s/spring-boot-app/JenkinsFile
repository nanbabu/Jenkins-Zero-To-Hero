pipeline { 
  agent any
  
  
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/nanbabu/Jenkins-Zero-To-Hero.git'
      }
    }
    
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.92.20.233:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'sonar')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonar -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Publish to Nexus Repository') { 
      steps { 
       nexusArtifactUploader(
          nexusVersion: 'nexus3',
          protocol: 'http',
          nexusUrl: '54.205.233.135:8081',
          repository: 'basu',
          credentialsId: 'nexu',
          groupId: 'com.abhishek',
          version: '1.0',
          artifacts: [[artifactId: 'spring-boot-demo', classifier: '', file: 'java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/spring-boot-web.jar', type: 'jar']]
        )
      }
    }
  
   stage('Build and Push Docker Image') {
    environment {
        DOCKER_IMAGE = "nanda27kumar/basu:${BUILD_NUMBER}"
    }
    steps {
        script {
            withCredentials([string(credentialsId: 'doker', variable: 'doker')]) {
             
                sh '''
                  cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                  docker build -t ${DOCKER_IMAGE} .
                  docker login -u nanda27kumar -p ${doker}
                  
                  docker push ${DOCKER_IMAGE}
                  '''
              }
          }
      }
  }
     
    
    stage('Update Deployment File') {
    environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "nanbabu"
    }
    steps {
        withCredentials([string(credentialsId: 'githob', variable: 'githob')]) {
            sh '''
                git config user.email "nandakumar27reddy@gmail.com"
                git config user.name "nanbabu"

                # Extract current image tag from deployment file
                CURRENT_TAG=$(grep -oP '(?<=image: .+:)\\d+' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml)

                # Increment the tag
                NEW_TAG=$((CURRENT_TAG + 1))

                # Replace the old tag with the new tag
                sed -i "s/${CURRENT_TAG}/${NEW_TAG}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${NEW_TAG}"
                git push https://${githob}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
    }
}

  }   
    
}
